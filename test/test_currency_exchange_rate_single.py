# coding: utf-8

"""
    Firefly III API Client

    This is the Python client for Firefly III API

    The version of the OpenAPI document: v6.2.10
    Contact: james@firefly-iii.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firefly_iii_client.models.currency_exchange_rate_single import CurrencyExchangeRateSingle

class TestCurrencyExchangeRateSingle(unittest.TestCase):
    """CurrencyExchangeRateSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CurrencyExchangeRateSingle:
        """Test CurrencyExchangeRateSingle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CurrencyExchangeRateSingle`
        """
        model = CurrencyExchangeRateSingle()
        if include_optional:
            return CurrencyExchangeRateSingle(
                data = firefly_iii_client.models.currency_exchange_rate_read.CurrencyExchangeRateRead(
                    attributes = firefly_iii_client.models.currency_exchange_rate_read_attributes.CurrencyExchangeRateReadAttributes(
                        created_at = '2018-09-17T12:46:47+01:00', 
                        date = '2018-09-17T12:46:47+01:00', 
                        from_currency_code = 'EUR', 
                        from_currency_decimal_places = 2, 
                        from_currency_id = '12', 
                        from_currency_symbol = '$', 
                        rate = '1.10340', 
                        to_currency_code = 'EUR', 
                        to_currency_decimal_places = 2, 
                        to_currency_id = '12', 
                        to_currency_symbol = '$', 
                        updated_at = '2018-09-17T12:46:47+01:00', ), 
                    id = '2', 
                    links = firefly_iii_client.models.object_link.ObjectLink(
                        0 = firefly_iii_client.models.object_link_0.ObjectLink_0(
                            rel = 'self', 
                            uri = '/OBJECTS/1', ), 
                        self = 'https://demo.firefly-iii.org/api/v1/OBJECTS/1', ), 
                    type = 'currency_exchange_rates', )
            )
        else:
            return CurrencyExchangeRateSingle(
                data = firefly_iii_client.models.currency_exchange_rate_read.CurrencyExchangeRateRead(
                    attributes = firefly_iii_client.models.currency_exchange_rate_read_attributes.CurrencyExchangeRateReadAttributes(
                        created_at = '2018-09-17T12:46:47+01:00', 
                        date = '2018-09-17T12:46:47+01:00', 
                        from_currency_code = 'EUR', 
                        from_currency_decimal_places = 2, 
                        from_currency_id = '12', 
                        from_currency_symbol = '$', 
                        rate = '1.10340', 
                        to_currency_code = 'EUR', 
                        to_currency_decimal_places = 2, 
                        to_currency_id = '12', 
                        to_currency_symbol = '$', 
                        updated_at = '2018-09-17T12:46:47+01:00', ), 
                    id = '2', 
                    links = firefly_iii_client.models.object_link.ObjectLink(
                        0 = firefly_iii_client.models.object_link_0.ObjectLink_0(
                            rel = 'self', 
                            uri = '/OBJECTS/1', ), 
                        self = 'https://demo.firefly-iii.org/api/v1/OBJECTS/1', ), 
                    type = 'currency_exchange_rates', ),
        )
        """

    def testCurrencyExchangeRateSingle(self):
        """Test CurrencyExchangeRateSingle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
