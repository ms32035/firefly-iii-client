# coding: utf-8

"""
    Firefly III API Client

    This is the Python client for Firefly III API

    The version of the OpenAPI document: 6.1.24
    Contact: james@firefly-iii.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firefly_iii_client.models.validation_error_response import ValidationErrorResponse

class TestValidationErrorResponse(unittest.TestCase):
    """ValidationErrorResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ValidationErrorResponse:
        """Test ValidationErrorResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValidationErrorResponse`
        """
        model = ValidationErrorResponse()
        if include_optional:
            return ValidationErrorResponse(
                errors = firefly_iii_client.models.validation_error_response_errors.ValidationErrorResponse_errors(
                    blocked = [
                        ''
                        ], 
                    blocked_code = [
                        ''
                        ], 
                    date = [
                        ''
                        ], 
                    email = [
                        ''
                        ], 
                    end = [
                        ''
                        ], 
                    iban = [
                        ''
                        ], 
                    name = [
                        ''
                        ], 
                    role = [
                        ''
                        ], 
                    start = [
                        ''
                        ], 
                    type = [
                        ''
                        ], ),
                message = 'The given data was invalid.'
            )
        else:
            return ValidationErrorResponse(
        )
        """

    def testValidationErrorResponse(self):
        """Test ValidationErrorResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
